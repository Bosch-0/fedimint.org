"use strict";(self.webpackChunkwiki_fedimint=self.webpackChunkwiki_fedimint||[]).push([[5447],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var i=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=i.createContext({}),p=function(t){var e=i.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=p(t.components);return i.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},f=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),f=p(n),m=r,d=f["".concat(l,".").concat(m)]||f[m]||c[m]||o;return n?i.createElement(d,a(a({ref:e},u),{},{components:n})):i.createElement(d,a({ref:e},u))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:r,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9050:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3,katex:!0},a="Minimint Consensus",s={unversionedId:"MiniMintDetails/Consensus",id:"MiniMintDetails/Consensus",title:"Minimint Consensus",description:"Because it takes such a central part in a federated mint we will begin with explaining the properties of",source:"@site/docs/MiniMintDetails/Consensus.md",sourceDirName:"MiniMintDetails",slug:"/MiniMintDetails/Consensus",permalink:"/wiki_fedimint/docs/MiniMintDetails/Consensus",draft:!1,editUrl:"https://github.com/humansinstitute/wiki_fedimint/tree/main/docs/MiniMintDetails/Consensus.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,katex:!0},sidebar:"tutorialSidebar",previous:{title:"Minimint Architecture",permalink:"/wiki_fedimint/docs/MiniMintDetails/Architecture"},next:{title:"Minimint Wallet",permalink:"/wiki_fedimint/docs/MiniMintDetails/Wallet"}},l={},p=[],u={toc:p};function c(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"minimint-consensus"},"Minimint Consensus"),(0,r.kt)("p",null,"Because it takes such a central part in a federated mint we will begin with explaining the properties of\n",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Byzantine_fault"},"Byzantine Fault Tolerant (BFT)")," consensus algorithms."),(0,r.kt)("p",null,"A byzantine fault does not only allow a party to go offline, but also to maliciously continue participating in the\nprotocol. In the following we will use"),(0,r.kt)("p",null,"$$n$$"),(0,r.kt)("p",null,"as the total number of participants in a protocol and"),(0,r.kt)("p",null,"$$f$$"),(0,r.kt)("p",null,"as the maximum amount of faulty ones among them."),(0,r.kt)("p",null,"We define a BFT consensus algorithm as an algorithm that allows all honest parties to agree on a common\nset of items as long as less or equal than"),(0,r.kt)("p",null,"$$f$$"),(0,r.kt)("p",null,"of the participants are malicious. These items may be contributed by any participant and there should be no risk of targeted censorship of items. One such protocol is ",(0,r.kt)("a",{parentName:"p",href:"https://eprint.iacr.org/2016/199.pdf"},"Honey Badger")," BFT (HBBFT). We will mainly use it as a reference for BFT consensus properties but note that similar but more efficient ones exist (most notably ",(0,r.kt)("a",{parentName:"p",href:"https://eprint.iacr.org/2020/841.pdf"},"Dumbo")," and ",(0,r.kt)("a",{parentName:"p",href:"https://arxiv.org/pdf/2103.09425"},"hybrids")," built on top of it)."),(0,r.kt)("p",null,"We generally assume the consensus to run in rounds, producing a common subset of the contributions made by the\nparticipants. At the start of each round each participant"),(0,r.kt)("p",null,"$$i$$"),(0,r.kt)("p",null,"is expected to propose a set of items"),(0,r.kt)("p",null,"$$C_i$$"),(0,r.kt)("p",null,"to the consensus."),(0,r.kt)("p",null,"After the BFT consensus algorithm has finished (note: this involves a lot of back-and-forth communication\nwhich we ignore for now) every honest participant learns the same subset"),(0,r.kt)("p",null,"$$C \\subseteq ","{","C_1, \\dots, C_n","}","$$"),(0,r.kt)("p",null,"The consensus set"),(0,r.kt)("p",null,"$$C$$"),(0,r.kt)("p",null,"contains at least"),(0,r.kt)("p",null,"$$n-f$$"),(0,r.kt)("p",null,"contributions from different participants. Note how this implies that\nif more than"),(0,r.kt)("p",null,"$$f$$"),(0,r.kt)("p",null,"participants propose the same item said item is guaranteed to be included in the next consensus\noutput."),(0,r.kt)("p",null,"The consensus protocols we are discussing, asynchronous ones, can only handle about"),(0,r.kt)("p",null,"$$\\frac{1}{3}$$"),(0,r.kt)("p",null,"faulty nodes, so this will also be our assumption when building our protocol on top if not stated otherwise."))}c.isMDXComponent=!0}}]);